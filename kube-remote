#!/bin/bash

set -e

function cleanup() {
	ssh -S "$controlSocket" -O exit "$host" > /dev/null 2>&1 || true
	rm "$configFile" > /dev/null 2>&1 || true
	rm "${configFile}e" > /dev/null 2>&1 || true
	rmdir "$tempDirectory" > /dev/null 2>&1 || true
}

trap "cleanup" EXIT

tempDirectory="$(mktemp -d)"
controlSocket="$tempDirectory/ssh.control"
configFile="$tempDirectory/config"

if [[ -z "$1" ]]; then
	echo "Usage: $0 <server-name>"
	exit 1
fi

host="$1"
shift

echo "Downloading kubectl config..."
# /etc/kubernetes/admin.conf
scp -q "$host:.kube/config" "$configFile"
chmod 600 "$configFile"

randomPort="$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')"

sed -rie "s,server:.*$,server: https://127.0.0.1:$randomPort,;s,certificate-authority-data:.*\$,insecure-skip-tls-verify: true," "$configFile"

ssh -M -S "$controlSocket" -NTf -L "$randomPort:localhost:6443" "$host"

export KUBECONFIG="$configFile"
export DOCKER_MACHINE_NAME="k8s:$host"


if [[ -z "$1" ]]; then
	fish
else
	"$@"
fi
